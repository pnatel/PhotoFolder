# Production environment
[folder]
# Point SourceFolder to your pool of pictures
SourceFolder = /source
# only change destination if you are NOT using the website
DestinationFolder = engine/static/destination/
LogPath = logs/production

[data]
dbSource = data/source.csv
dbDestination = data/destination.csv
MongoURL = 
dbUser = 
dbPass = 
dbName = 

[ext]
FileType1 = jpg
FileType2 = jpeg
FileType3 = png
FileType4 = JPG
FileType5 = JPEG
FileType6 = PNG

[parameter]
port = 23276
# Size of your sample of pictures from the source folder
NumberOfPics = 100
# not implemented
MaxNumberOfPics = 1000
# How much the folder can grow size in Megabytes
FoldersizeUpperLimit = 1000
NewerPhotos = datetime.now() - relativedelta(years=3)
# Waiting time between auto copy job (in seconds)
JobInterval = 86400
# Log Level usage: (Default = 3)
# 1 = debug    - Detailed information, typically of interest only
#                when diagnosing problems.
# 2 = info     - Confirmation that things are working as expected.
# 3 = warning  - An indication that something unexpected happened,
#                or indicative of some problem in the near future
#                (e.g. ‘disk space low’).
#                The software is still working as expected.
# 4 = error    - Due to a more serious problem, the software has not
#                been able to perform some function.
# 5 = critical - A serious error, indicating that the program itself
#                may be unable to continue running.
logLevel = 3
# How the data is manipulated? (txt, csv, mongo)
DataMode = txt

[notification]
# Run this command after the auto copy job is completed
# The command can do whatever you want. I use it to send
# notifications to https://healthchecks.io/
# e.g: "curl -fsS --retry 3 https://hc-ping.com/your-uuid-here"
command =

# ONLY RANDOM IS IMPLEMENTED
[sort]
# 1 = Random,
# 2 = Shuffle recently,
# 3 = Shuffle oldest,
# 4 = Descendent by Date taken,
# 5 = By Location (Need to read it from pic or Google)
Criteria = 1

# settings for application testing/DEMO and CI/CD on Github
[test]
# test_mode True for DEMO or False for production environment
test_mode = True
SourceFolder = engine/static/demo/source/
DestinationFolder = engine/static/demo/destination/
LogPath = logs/demo
NumberOfPics = 3
FoldersizeUpperLimit = 10
JobInterval = 10
command = ping google.com